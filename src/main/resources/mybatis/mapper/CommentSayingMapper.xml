<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.CommentSayingMapper" >

    <resultMap id="SayingMap" type="com.example.demo.model.CommentSaying" >
        <id column="saying_id" property="id" jdbcType="VARCHAR" />
        <id column="section_id" property="section_id" jdbcType="VARCHAR" />
        <result column="sayingContent" property="sayingContent" jdbcType="INTEGER" />
        <result column="author" property="author" jdbcType="VARCHAR" />
        <result column="sayingAvatar" property="avatar" jdbcType="VARCHAR" />
        <result column="likes" property="likes" jdbcType="VARCHAR" />
        <result column="createTime" property="createTime" jdbcType="VARCHAR" />
        <collection property="flcs" ofType="com.example.demo.model.CommentFirstLevel" column="sayingId">
            <id column="flc_id" property="id" jdbcType="VARCHAR" />
            <result column="sayingId" property="sayingId" jdbcType="VARCHAR" />
            <result column="commenter" property="commenter"/>
            <result column="commenterAvatar" property="avatar"/>
            <result column="commentContent" property="commentContent"/>
            <result column="commentTime" property="commentTime" jdbcType="VARCHAR" />
            <collection property="slcs" ofType="com.example.demo.model.CommentSecondLevel" column="flcId">
                <id column="slc_id" property="id" jdbcType="VARCHAR" />
                <result column="flcId" property="flcId" jdbcType="VARCHAR" />
                <result column="replier" property="replier"/>
                <result column="toCommenter" property="toCommenter"/>
                <result column="replyContent" property="replyContent"/>
                <result column="replyTime" property="replyTime" jdbcType="VARCHAR" />
            </collection>
        </collection>
    </resultMap>

    <select id="selectListBySectionId" resultMap="SayingMap" parameterType="java.lang.String" >
        SELECT
        *
        FROM
        (
        SELECT
        *
        FROM
        commentSaying s
        LEFT JOIN commentFirstLevel fc ON s.saying_id = fc.sayingId
        ) tmp
        LEFT JOIN commentSecondLevel sc ON tmp.flc_id = sc.flcId
        WHERE
        section_id = #{id}
    </select>

    <select id="selectCommentAll" resultMap="SayingMap">
        SELECT
        *
        FROM
        (
        SELECT
        *
        FROM
        commentSaying s
        LEFT JOIN commentFirstLevel fc ON s.saying_id = fc.sayingId
        ) tmp
        LEFT JOIN commentSecondLevel sc ON tmp.flc_id = sc.flcId
    </select>

    <insert id="insertComment" useGeneratedKeys="true"   parameterType="com.example.demo.model.CommentSaying">
        INSERT INTO commentSaying (
        saying_id,
        sayingContent,
        section_id,
        author,
        sayingAvatar,
        likes,
        createTime
        )
        VALUES
        (
        #{id},
        #{sayingContent},
        #{section_id},
        #{author},
        #{avatar},
        #{likes},
        #{createTime}
        )
    </insert>

    <select id="selectOneById" resultMap="SayingMap" parameterType="java.lang.String" >
        select * from
        (select * from commentSaying s left join commentFirstLevel fc on s.saying_id=fc.sayingId where s.saying_id=#{id}) tmp left join commentSecondLevel sc
        on tmp.flc_id = sc.flcId
    </select>

    <select id="updateLikesById">
        update commentSaying set likes = #{likes} where saying_id = #{id}
    </select>

    <delete id="deleteById">
        DELETE
        FROM
        commentSaying
        WHERE
        saying_id = #{sayingId};
    </delete>
</mapper>